# -*- mode: yaml -*-
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pv4-1
spec:
  storageClassName: kadalu.storage-pool-4
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 600Mi

---
apiVersion: v1
kind: Pod
metadata:
  name: pod4-1
  labels:
    app: sample-app
spec:
  containers:
  - name: sample-app
    image: docker.io/kadalu/sample-pv-check-app:latest
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - mountPath: "/mnt/pv"
      name: csivol
  volumes:
  - name: csivol
    persistentVolumeClaim:
      claimName: pv4-1
  restartPolicy: OnFailure

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pv4-2
spec:
  storageClassName: kadalu.storage-pool-4
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 800Mi

---
apiVersion: v1
kind: Pod
metadata:
  name: pod4-2
  labels:
    app: sample-app
spec:
  containers:
  - name: sample-app
    image: docker.io/kadalu/sample-pv-check-app:latest
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - mountPath: "/mnt/pv"
      name: csivol
  volumes:
  - name: csivol
    persistentVolumeClaim:
      claimName: pv4-2
  restartPolicy: OnFailure
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: kadalu.storage-pool-4-block
provisioner: kadalu
parameters:
  storage_name: "storage-pool-4"
  pv_type: Block
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pv4-3
spec:
  storageClassName: kadalu.storage-pool-4-block
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: Pod
metadata:
  name: pod4-3
  labels:
    app: sample-app
spec:
  containers:
  - name: sample-app
    image: docker.io/kadalu/sample-pv-check-app:latest
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - mountPath: "/mnt/pv"
      name: csivol
  volumes:
  - name: csivol
    persistentVolumeClaim:
      claimName: pv4-3
  restartPolicy: OnFailure
