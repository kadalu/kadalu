name: Release

on:
  push:
    # Publish `1.2.3` tags as releases.
    tags:
      - "*"

env:
  kadalu_version: $(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')


jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  push-to-pypi-store:
    name: Push to pypi (quotad)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Run 'make release'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          KADALU_VERSION=${{ env.kadalu_version }} TWINE_PASSWORD=${{ secrets.TWINE_PASSWORD }} make pypi-upload

  publish-kadalu-cli:
    name: Publish kubectl-kadalu
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Build kubectl-kadalu
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          KADALU_VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,') make cli-build
    - name: Generate Manifests
      run: |
          KADALU_VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,') make prepare-release-manifests
    - name: Upload Manifest files
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: manifests/*
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
    - name: Upload kubectl-kadalu to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: cli/build/kubectl-kadalu
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

  publish-helm-chart:
    name: Publish Helm Chart
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Generate tgz archive of Helm Chart
        run: |
          KADALU_VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,') make helm-chart
      - name: Upload Helm Chart archive to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: helm/kadalu-helm-chart.tgz
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

  multi-arch-build-for-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Python (for cli-build)
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Get the CLI build (kubectl-kadalu)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          KADALU_VERSION=${{ env.kadalu_version }} make cli-build
      -
        name: Build CSI Image and push
        timeout-minutes: 260
        run: |
          KADALU_VERSION=${{ env.kadalu_version }} docker buildx build \
            --platform linux/amd64 \
            --tag docker.io/kadalu/builder:${{ env.kadalu_version }} \
            --tag docker.io/kadalu/builder:latest \
            --output "type=image,name=docker.io/kadalu/builder,push=true" \
            --file extras/Dockerfile.builder .
          KADALU_VERSION=${{ env.kadalu_version }} docker buildx build \
            --platform linux/amd64 \
            --target prod \
            --tag docker.io/kadalu/kadalu-csi:${{ env.kadalu_version }} \
            --tag docker.io/kadalu/kadalu-csi:latest \
            --output "type=image,name=docker.io/kadalu/kadalu-csi,push=true" \
            --file csi/Dockerfile.frombuilder .
          KADALU_VERSION=${{ env.kadalu_version }} docker buildx build \
            --platform linux/amd64 \
            --target prod \
            --tag docker.io/kadalu/kadalu-operator:${{ env.kadalu_version }} \
            --tag docker.io/kadalu/kadalu-operator:latest \
            --output "type=image,name=docker.io/kadalu/kadalu-operator,push=true" \
            --file operator/Dockerfile.frombuilder .
          KADALU_VERSION=${{ env.kadalu_version }} docker buildx build \
            --platform linux/amd64 \
            --target prod \
            --tag docker.io/kadalu/kadalu-server:${{ env.kadalu_version }} \
            --tag docker.io/kadalu/kadalu-server:latest \
            --output "type=image,name=docker.io/kadalu/kadalu-server,push=true" \
            --file server/Dockerfile.frombuilder .
