name: Run on every PR

on:
  pull_request:
    branches:
      - devel
    paths-ignore:
      - 'doc/**'
      - 'extras/**'
      - '**.md'

jobs:
  pylint:
    name: Run pylint
    runs-on: ubuntu-latest
    # Skip based on commit message
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies pylint
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint glustercli
    - name: Run pylint
      run: make pylint

  run-on-minikube:
    name: kube 1.20.0
    runs-on: ubuntu-latest
    env:
      KUBE_VERSION: v1.20.0
    # Skip based on commit message
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - uses: actions/checkout@v2
    - name: Install Docker Dependencies
      run: sudo apt-get install -y conntrack
    - name: Build locally
      id: build_local
      run: |
        make build-containers;

        # Conditionally build test containers if PR includes tests/**/Dockerfile
        CONTAINERS_FOR=''
        URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files"
        FILES=$(curl -s -X GET -G $URL | jq -r '.[] | .filename')

        if grep -e '^tests.*Dockerfile$' <<< "$FILES"; then
          CONTAINERS_FOR=TESTING
        fi
        # In build script, only test containers will be built if this variable is set
        if [[ "$CONTAINERS_FOR" == "TESTING" ]]; then
          CONTAINERS_FOR=TESTING make test-containers
        fi
        echo Completed building containers
        echo ::set-output name=files::$FILES
    - name: Generate Manifests
      run: VERBOSE="yes" make gen-manifest
    - name: Setup Minikube
      run: tests/setup.sh $KUBE_VERSION
    - name: Run tests
      run: |
        tests/travis-test.sh $KUBE_VERSION

        if grep -e '\bcli' <<< "$FILES"; then
          tests/travis-test.sh $KUBE_VERSION cli
        fi
      env:
        # Current conditions in minikube.sh which are using commit message:
        # [helm skip]: If contained in COMMIT MESSAGE, validating helm is skipped
        COMMIT_MSG: ${{ github.event.head_commit.message }}
        FILES: ${{steps.build_local.outputs.files}}
    - name: Cleanup
      run: tests/cleanup.sh $KUBE_VERSION
