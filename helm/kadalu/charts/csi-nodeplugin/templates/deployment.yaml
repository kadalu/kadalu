kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kadalu-csi-nodeplugin
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/part-of: kadalu
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/name: kadalu-csi-nodeplugin
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: kadalu
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/name: kadalu-csi-nodeplugin
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: kadalu
        app.kubernetes.io/component: csi-driver
        app.kubernetes.io/name: kadalu-csi-nodeplugin
      namespace: {{ .Release.Namespace }}
    spec:
      serviceAccountName: kadalu-csi-nodeplugin
      containers:
        - name: csi-node-driver-registrar
          image: docker.io/raspbernetes/csi-node-driver-registrar:2.0.1
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/kadalu /registration/kadalu-reg.sock"]
          env:
            - name: ADDRESS
              value: /plugin/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              {{- if (eq .Values.kubernetesDistro "microk8s") }}
              value: /var/snap/microk8s/common/var/lib/kubelet/plugins_registry/kadalu/csi.sock
              {{- else }}
              value: /var/lib/kubelet/plugins_registry/kadalu/csi.sock
              {{- end }}
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: registration-dir
              mountPath: /registration
        - name: kadalu-nodeplugin
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: docker.io/kadalu/kadalu-csi:{{- if eq .Chart.Version "0.0.0-0" }}devel{{- else}}{{.Chart.Version}}{{- end }}
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://plugin/csi.sock
            - name: KADALU_VERSION
              value: "{{- if eq .Chart.Version "0.0.0-0" }}devel{{- else}}{{.Chart.Version}}{{- end }}"
            - name: K8S_DIST
              value: "{{ .Values.kubernetesDistro }}"
            - name: VERBOSE
              value: "{{ .Values.verbose }}"
            - name: CSI_ROLE
              value: "nodeplugin"
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: pods-mount-dir
              {{- if (eq .Values.kubernetesDistro "microk8s") }}
              mountPath: /var/snap/microk8s/common/var/lib/kubelet/pods
              {{- else }}
              mountPath: /var/lib/kubelet/pods
              {{- end }}
              mountPropagation: "Bidirectional"
            - name: glusterfsd-volfilesdir
              mountPath: "/var/lib/gluster"
            - name: gluster-dev
              mountPath: "/dev"
            - name: varlog
              mountPath: /var/log/gluster
            - name: csi-dir
              {{- if (eq .Values.kubernetesDistro "microk8s") }}
              mountPath: /var/snap/microk8s/common/var/lib/kubelet/plugins/kubernetes.io/csi
              {{- else }}
              mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
              {{- end }}
              mountPropagation: "Bidirectional"
        - name: kadalu-logging
          image: docker.io/library/busybox
          command: ["/bin/sh"]
          args: ["-c", "while true; do logcnt=$(/bin/ls /var/log/gluster/ | wc -l); if [ ${logcnt} -gt 0 ]; then break; fi; sleep 5; done; tail -f /var/log/gluster/*.log"]
          volumeMounts:
            - name: varlog
              mountPath: "/var/log/gluster"
      volumes:
        - name: plugin-dir
          hostPath:
            {{- if (eq .Values.kubernetesDistro "microk8s") }}
            path: /var/snap/microk8s/common/var/lib/kubelet/plugins_registry/kadalu
            {{- else }}
            path: /var/lib/kubelet/plugins_registry/kadalu
            {{- end }}
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            {{- if (eq .Values.kubernetesDistro "microk8s") }}
            path: /var/snap/microk8s/common/var/lib/kubelet/pods
            {{- else }}
            path: /var/lib/kubelet/pods
            {{- end }}
            type: Directory
        - name: registration-dir
          hostPath:
            {{- if (eq .Values.kubernetesDistro "microk8s") }}
            path: /var/snap/microk8s/common/var/lib/kubelet/plugins_registry/
            {{- else }}
            path: /var/lib/kubelet/plugins_registry/
            {{- end }}
            type: Directory
        - name: glusterfsd-volfilesdir
          configMap:
            name: "kadalu-info"
        - name: gluster-dev
          hostPath:
            path: "/dev"
        - name: varlog
          emptyDir: {}
        - name: csi-dir
          hostPath:
            {{- if (eq .Values.kubernetesDistro "microk8s") }}
            path: /var/snap/microk8s/common/var/lib/kubelet/plugins/kubernetes.io/csi/
            {{- else }}
            path: /var/lib/kubelet/plugins/kubernetes.io/csi/
            {{- end }}
            type: DirectoryOrCreate
