# -*- mode: yaml -*-
## Deploy CSI Provisioner
---
# External Resizer
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-resizer-role
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create", "get", "list", "watch", "update", "patch"]

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-csi-provisioner
  namespace: {{ namespace }}
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch", "create"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["csi.storage.k8s.io"]
    resources: ["csinodeinfos"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch", "delete", "get"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "list", "watch", "delete"]
  - apiGroups: ["csi.storage.k8s.io"]
    resources: ["csidrivers"]
    verbs: ["create", "delete"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["get", "watch", "patch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-resizer-binding
subjects:
  - kind: ServiceAccount
    name: kadalu-csi-provisioner
    namespace: {{ namespace }}
roleRef:
  kind: ClusterRole
  name: csi-resizer-role
  apiGroup: rbac.authorization.k8s.io

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-csi-provisioner
  namespace: {{ namespace }}
subjects:
  - kind: ServiceAccount
    namespace: {{ namespace }}
    name: kadalu-csi-provisioner
roleRef:
  kind: ClusterRole
  name: kadalu-csi-provisioner
  apiGroup: rbac.authorization.k8s.io

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-csi-provisioner
  namespace: {{ namespace }}
rules:
# Only one of the following rules for endpoints or leases is required based on
# what is set for `--leader-election-type`. Endpoints are deprecated in favor of Leases.
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{ namespace }}
  name: external-resizer-cfg
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "get", "list", "watch", "update", "patch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-csi-provisioner
  namespace: {{ namespace }}
subjects:
  - kind: ServiceAccount
    name: kadalu-csi-provisioner
    namespace: {{ namespace }}
roleRef:
  kind: Role
  name: kadalu-csi-provisioner
  apiGroup: rbac.authorization.k8s.io

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-resizer-role-cfg
  namespace: {{ namespace }}
subjects:
  - kind: ServiceAccount
    name: kadalu-csi-provisioner
    namespace: {{ namespace }}
roleRef:
  kind: Role
  name: external-resizer-cfg
  apiGroup: rbac.authorization.k8s.io

---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: kadalu-csi-provisioner
  namespace: {{ namespace }}
  labels:
    app.kubernetes.io/part-of: kadalu
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/name: kadalu-csi-provisioner
spec:
  serviceName: kadalu-csi-provisioner
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: kadalu
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/name: kadalu-csi-provisioner
  template:
    metadata:
      name: csi-provisioner
      namespace: {{ namespace }}
      labels:
        app.kubernetes.io/part-of: kadalu
        app.kubernetes.io/component: csi-driver
        app.kubernetes.io/name: kadalu-csi-provisioner
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      serviceAccountName: kadalu-csi-provisioner
      containers:
        - name: csi-provisioner
          image: docker.io/raspbernetes/csi-external-provisioner:2.0.2
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=3m"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
            - name: KADALU_VERSION
              value: "{{ kadalu_version }}"
            - name: K8S_DIST
              value: "{{ k8s_dist }}"
            - name: VERBOSE
              value: "{{ verbose }}"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-attacher
          image: docker.io/raspbernetes/csi-external-attacher:3.0.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
            - name: KADALU_VERSION
              value: "{{ kadalu_version }}"
            - name: K8S_DIST
              value: "{{ k8s_dist }}"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: kadalu-provisioner
          ports:
            - name: kadalu-csi-port
              containerPort: 8050
          securityContext:
            privileged: true
            capabilities:
              add: ["CAP_SYS_ADMIN", "SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: docker.io/{{ docker_user }}/kadalu-csi:{{ kadalu_version }}
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SECRET_GLUSTERQUOTA_SSH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: glusterquota-ssh-secret
                  key: glusterquota-ssh-username
                  optional: true
            - name: CSI_ENDPOINT
              value: unix://plugin/csi.sock
            - name: KADALU_VERSION
              value: "{{ kadalu_version }}"
            - name: K8S_DIST
              value: "{{ k8s_dist }}"
            - name: VERBOSE
              value: "{{ verbose }}"
            - name: CSI_ROLE
              value: "provisioner"
          volumeMounts:
            - name: socket-dir
              mountPath: /plugin
            - name: glusterfsd-volfilesdir
              mountPath: "/var/lib/gluster"
            - name: gluster-dev
              mountPath: "/dev"
            - name: varlog
              mountPath: "/var/log/gluster"
            - name: secret-volume
              readOnly: true
              mountPath: "/etc/secret-volume"
        - name: kadalu-logging
          image: docker.io/library/busybox
          command: ["/bin/sh"]
          args: ["-c", "while true; do logcnt=$(/bin/ls /var/log/gluster/ | wc -l); if [ ${logcnt} -gt 0 ]; then break; fi; sleep 5; done; tail -f /var/log/gluster/*.log"]
          volumeMounts:
            - name: varlog
              mountPath: "/var/log/gluster"
        - name: csi-resizer
          image: docker.io/raspbernetes/csi-external-resizer:1.0.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=3m"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
            - name: KADALU_VERSION
              value: "{{ kadalu_version }}"
            - name: K8S_DIST
              value: "{{ k8s_dist }}"
            - name: VERBOSE
              value: "{{ verbose }}"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
      volumes:
        - name: socket-dir
          emptyDir:
        - name: glusterfsd-volfilesdir
          configMap:
            name: "kadalu-info"
        - name: gluster-dev
          hostPath:
            path: "/dev"
        - name: varlog
          emptyDir: {}
        - name: secret-volume
          secret:
            secretName: glusterquota-ssh-secret
            defaultMode: 384
            optional: true
